package com.androidexample.quizzer;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;

import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    public void startGame(View v){
        final Context context = this;
        final ImageView imageView = (ImageView)findViewById(R.id.imageView);


        new AlertDialog.Builder(this)
            .setTitle("My First Alert!")
            .setMessage("Here is my message")
                .setPositiveButton("Yes!", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        //Toast.makeText(context,"YOU WIN!!",Toast.LENGTH_SHORT).show();

                        //How do we show a green check mark??? ImageView!!!!
                        //set imageview image to a green checkmark
                        //imageView.setImageResource(R.drawable.questionmark);

                    }

                }) //always on right hand side
                .setNegativeButton("No.", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        //Toast.makeText(context,"YOU WIN!!",Toast.LENGTH_SHORT).show();

                        //How do we show a green check mark??? ImageView!!!!
                        //set imageview image to a green checkmark
                        //imageView.setImageResource(R.drawable.ex);
                    }
                })
                .setNeutralButton("I'm not sure...", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        //Toast.makeText(context,"YOU WIN!!",Toast.LENGTH_SHORT).show();
                        startListDialog();
                        //How do we show a green check mark??? ImageView!!!!
                        //set imageview image to a green checkmark
                        //imageView.setImageResource(R.drawable.checkmark);

                    }
                })
        .create()
        .show();
    }

    public void startListDialog(){
        new AlertDialog.Builder(this)
                .setTitle("Pick my favorite candy")
                .setItems(R.array.items, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int i) {
                        Log.i("info", "they clicked" + i);
                        dialog.cancel();
                        //if(i==3){
                            //startMultipleSelect();
                        //}


                        //get answer from static class
                        // get string value of what clicked on
                        // go through answer list
                        // and see if what they clicked on exists,
                        // if so, show next dialog

                        String chosenAnswer = getResources().getStringArray(R.array.items)[i];

                        for(int j = 0; j < Game.favoriteCandyAnswers.size(); j++){
                            if(Game.favoriteCandyAnswers.get(j).equals(chosenAnswer)){
                                startMultipleSelect();
                                return;
                            }
                        }
                        // if you make it here, they got it wrong

                        // showWrongImage();
                        dialog.cancel();
                    }
                })
                .create()
                .show();
    }

    public void startMultipleSelect(){
        final List<Integer> answers = new ArrayList<Integer>();
        new AlertDialog.Builder(this)
                .setTitle("Names of famous dogs:")
                .setMultiChoiceItems(R.array.dogs, null, new DialogInterface.OnMultiChoiceClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i, boolean isChecked) {
                        //Log.i("info", "they click on multi" + i);
                        //Log.i("info", "isChecked was " + isChecked);
                        if(answers.contains(i)){
                            answers.remove(answers.indexOf(i));
                        } else {
                            answers.add(i);
                        }
                        Log.i("info", "The current set of answers is " + answers.toString());
                    }
                })
                .setPositiveButton("Done", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        //with the answers they have chosen, grab string values
                        // loop through the answer key
                        // make sure they each exist in answer list they gave,
                        // also make sure they gave the same number of answers as
                        // the answer key

                        String[] possibleAnswers = getResources().getStringArray(R.array.dogs);
                        List<String> chosenAnswers = new ArrayList<String>();

                        for(int i = 0; i<answers.size(); i++){
                            chosenAnswers.add(possibleAnswers[answers.get(i)]
                            );
                        }

                        if(chosenAnswers.size() !=  Game.famousDogAnswers.size()){
                            //showWrongAnswer
                            dialog.cancel();
                        } else {

                            //String correctOne = Game.famousDogAnswers.get(0);
                            //String correctTwo = Game.famousDogAnswers.get(1);

                            for (int i = 0; i < Game.famousDogAnswers.size(); i++) {

                                if (chosenAnswers.contains(Game.famousDogAnswers.get(i))) {
                                    // do nothing
                                } else {
                                    return;
                                }

                            }
                        }
                    }
                })
                .create()
                .show();
    }

}